np_bnt_z <- (np_bnt - 26) / 3.4
np_inhibit <- dde_data[ij,"np_inhibit"]
inhibit_ex <- read_excel(ex_path, sheet = 12)
np_inhibit_ss <- inhibit_ex[as.integer(ceiling(np_inhibit))+1,as.character(age)]
np_inhibit_z <- (as.integer(np_inhibit_ss)-10)/3
np_fas <- dde_data[ij,"np_fas"]
fas_ex <- read_excel(ex_path, sheet = "heaton_scaled")
np_fas_sscore <- fas_ex[as.integer(ceiling(np_fas))+1,5]
fas_ex <- read_excel(ex_path, sheet = "heaton_fas")
var_fas <- paste0(sex_r,"/",edu_r,"/",age_r,"/",race)
np_fas_tscore <- fas_ex[as.integer(ceiling(20-np_fas_sscore)),var_fas]
np_fas_z <- (as.integer(np_fas_tscore) - 50) / 10
np_tmtb <- dde_data[ij,"np_tmtb"]
tmtb_ex <- read_excel(ex_path, sheet = 6)
np_tmtb_ss <- tmtb_ex[as.integer(ceiling(np_tmtb))+1,as.character(age)]
np_tmtb_z <- (as.integer(np_tmtb_ss) - 10)/3
np_tmta <- dde_data[ij,"np_tmta"]
tmta_ex <- read_excel(ex_path, sheet = 3)
np_tmta_ss <- tmta_ex[as.integer(ceiling(np_tmta))+1,as.character(age)]
np_tmta_z <- (as.integer(np_tmta_ss) - 10)/3
np_hvot <- dde_data[ij,"np_hvot"]
if (age < 55) {hvot_ex <- read_excel(ex_path, sheet = 22)}
if (55 <= age | age < 60) {hvot_ex <- read_excel(ex_path, sheet = 23)}
if (60 <= age | age < 65) {hvot_ex <- read_excel(ex_path, sheet = 24)}
if (65 <= age) {hvot_ex <- read_excel(ex_path, sheet = 25)}
np_hvot_corrected <- hvot_ex[as.integer(ceiling(np_hvot))+1,as.integer(edu)+2]
hvot_t_ex <- read_excel(ex_path, sheet = 26)
np_hvot_tscore <- hvot_t_ex[as.integer(np_hvot_corrected)+1,2]
np_hvot_z <- -(as.integer(np_hvot_tscore) - 50) / 10
np_digsymb <- dde_data[ij,"np_digsymb"]
digsymb_ex <- read_excel(ex_path, sheet = 21)
np_digsymb_ss <- digsymb_ex[as.integer(ceiling(np_digsymb))+1,as.character(age)]
np_digsymb_z <- (as.integer(np_digsymb_ss)-10)/3
np_color <- dde_data[ij,"np_color"]
color_ex <- read_excel(ex_path, sheet = 10)
np_color_ss <- color_ex[as.integer(ceiling(np_color))+1,as.character(age)]
np_color_z <- (as.integer(np_color_ss)-10)/3
np_word <- dde_data[ij,"np_word"]
word_ex <- read_excel(ex_path, sheet = 11)
np_word_ss <- word_ex[as.integer(ceiling(np_word))+1,as.character(age)]
np_word_z <- (as.integer(np_word_ss)-10)/3
dat1 <<- cbind(np_anim_z,np_biber_ld_z,np_biber_sd_z,np_biber_t1to5_z,np_bnt_z,np_color_z,np_cvlt1to5_z,np_cvlt_ldfr_z,np_cvlt_sdfr_z,np_cvltrecog_discrim_z,np_digsymb_z,np_fas_z,np_hvot_z,np_inhibit_z,np_tmta_z,np_tmtb_z,np_tower_z,np_word_z)
dat2 <<- cbind(np_anim,np_biber_ld,np_biber_sd,np_biber_t1to5,np_bnt,np_color,"np_cvlt1to5","np_cvlt_ldfr","np_cvlt_sdfr","np_cvltrecog_discrim",np_digsymb,np_fas,np_hvot,np_inhibit,np_tmta,np_tmtb,np_tower,np_word)
dat <<- rbind(dat1,as.character(dat2))
}
e
ra
edc_data$gds_total_score
gds <- edc_data$gds_total_score
runApp('MAP2_Uploader/Uploader')
runApp('MAP2_Uploader/Uploader')
dat1 <<- cbind(ra,gds,np_anim_z,np_biber_ld_z,np_biber_sd_z,np_biber_t1to5_z,np_bnt_z,np_color_z,np_cvlt1to5_z,np_cvlt_ldfr_z,np_cvlt_sdfr_z,np_cvltrecog_discrim_z,np_digsymb_z,np_fas_z,np_hvot_z,np_inhibit_z,np_tmta_z,np_tmtb_z,np_tower_z,np_word_z)
runApp('MAP2_Uploader/Uploader')
runApp('MAP2_Uploader/Uploader')
vmac <- 4209
epochh <- 1
library(ggplot2)
library(plotly)
library(redcapAPI)
library(WordR)
library(officer)
library(Hmisc)
library(tidyverse)
library(flextable)
#library(ggpattern)
#library(patternplot)
library(png)
library(readxl)
# Global Pathing
local <- 1
online <- 0
if (local) {
# Add Local Paths Here
out_path <- "C:/Users/sweelyb/Documents/output/"
main_path <- "C:/Users/sweelyb/Documents/Letter_Auto/"
} else if (online) {
# Add Global Paths Here
out_path <- "/app/"
main_path <- "/srv/shiny-server/"
}
ex_path <- paste0(main_path,"epoch5dde_lookup.xlsx")
FII <- redcapConnection(url = "https://redcap.vanderbilt.edu/api/",
token = "489C53D4DAAE99F87EF37A9D77563BB0",conn,project = 42471)
tm7yr <- redcapConnection(url = "https://redcap.vanderbilt.edu/api/",
token = "1769F48432D599795BAA88493EFFCF3F",conn,project = 117460)
tm60 <- redcapConnection(url = "https://redcap.vanderbilt.edu/api/",
token = "54A5137E46FFC775D9BC1117DA32B30A",conn,project = 80145)
tm36 <- redcapConnection(url = "https://redcap.vanderbilt.edu/api/",
token = "3CCD5E3C8A09BE5F6E940B291A9BC6B4",conn,project = 73222)
tm18 <- redcapConnection(url = "https://redcap.vanderbilt.edu/api/",
token = "04661B3930D4F892AB1F194C287EE98B",conn,project = 56822)
tme <- redcapConnection(url = "https://redcap.vanderbilt.edu/api/",
token = "1A5DACDD0A80C92D60FCCC27A501286E",conn,project = 39332)
pdb <- redcapConnection(url = "https://redcap.vanderbilt.edu/api/",
token = "496ED1BD518B29CB96B5CFD9C48844FE", conn, project = 136242)
pdb_datas <- exportReports(pdb, 267451)
# NP Norm Scores
dde <- redcapConnection(url = "https://redcap.vanderbilt.edu/api/",
token = "0676EDF59CA88377654227BB56028EEE", conn, project = 124389)
dde2 <- redcapConnection(url = "https://redcap.vanderbilt.edu/api/",
token = "F009A86ED43B42332AC26C21411F37BC", conn, project = 140071)
EDC <- redcapConnection(url = "https://redcap.vanderbilt.edu/api/",
token = "09B0A6B7F207F51C6F656BAE567FA390", conn, project = 119047)
dde_datas <- exportReports(dde, 275632)
dde2_datas <- exportReports(dde2, 277386)
edc_datas <- exportReports(EDC, 275637)
echo_datas <- exportReports(EDC,281651)
cond_datas <- exportReports(EDC,284613)
dep_datas <- exportReports(EDC,294830)
events <- c("eligibility_arm_1","enrollmentbaseline_arm_1","18month_followup_arm_1","3year_followup_arm_1","5year_followup_arm_1","7year_followup_arm_1","9year_followup_arm_1","11year_followup_arm_1")
map_data <- pdb_datas[which(pdb_datas$vmac_id==as.integer(vmac)),]
rev_data_frame <- apply(map_data, 2, rev)
map_data <- as.data.frame(rev_data_frame)
pdb_data <- map_data[which(map_data[,"redcap_event_name"]== events[epochh+1]),]
map_id <- pdb_data$map_id
if (nchar(map_id)==1) {inp <- paste0("00",map_id)} else if (nchar(map_id)==2) {inp <- paste0("0",map_id)} else {inp <- map_id}
fail <- 0
dde_data <- dde2_datas[grep(inp,dde2_datas$record_id),]
#if (length(dde_data$record_id)==0) {fail <- 1}
ij <- grep("--1",dde_data$record_id)
if(length(ij)==0) {ij <- 1}
edc_data <- edc_datas[which(edc_datas$map_id==as.integer(map_id)),]
if (length(edc_data$map_id)==0) {fail <- 1}
edc_data <- edc_data[which(edc_data[,"redcap_event_name"]== events[epochh+1]),]
dep_data <- dep_datas[which(dep_datas$map_id==as.integer(map_id)),]
if (length(dep_data$map_id)==0) {fail <- 1}
dep_data <- dep_data[which(dep_data[,"redcap_event_name"]== events[epochh]),]
echo_datas <- echo_datas[which(echo_datas$map_id==as.integer(map_id)),]
echo_datas_brain <- echo_datas[which(is.na(echo_datas$redcap_repeat_instrument)==FALSE),]
echo_datas <- echo_datas[which(is.na(echo_datas$redcap_repeat_instrument)),]
echo_data <- echo_datas[which(echo_datas[,"redcap_event_name"]== events[epochh+1]),]
#echo_data <- echo_data_s[which(is.na(echo_data_s$redcap_repeat_instrument)),]
brain_data <- echo_datas_brain[which(echo_datas_brain[,"redcap_event_name"]== events[epochh+1]),]
if (length(echo_data$map_id)==0) {fail <- 1}
cond_datas <- exportReports(EDC,284613)
cond_datas <- cond_datas[which(cond_datas[,"redcap_event_name"]== events[epochh+1]),]
cond_data <- cond_datas[which(cond_datas["map_id"]==as.integer(pdb_data$map_id)),]
cond_data <- cond_data[1,]
bc <- cond_data$blood_complete; if (is.na(bc)) {bc <- "No"}
ec <- cond_data$echo_complete; if (is.na(ec)) {ec <- "No"}
nc <- cond_data$np_complete; if (is.na(nc)) {nc <- "No"}
(bc == "No" & ec =="No" & nc == "No" | fail)
err <<- ""
e <- epochh
map_id <- as.character(pdb_data[,"map_id"])
i<-1
# Participant Data
first_name <<- pdb_data[i,"preferred_name"]
if (is.na(first_name)) {first_name<<-pdb_data[i,"first_name"]}
last_name <<- pdb_data[i, "last_name"]
street_address <<- pdb_data[i, "street_address"]
city <<- pdb_data[i, "city"]
state <<- pdb_data[i, "state"]
zipp <<- pdb_data[i, "zip"]
dob <<- format(as.Date(pdb_data[i, "dob"]), "%m/%d/%Y")
sex <<- as.character(pdb_data[i, "sex"])
gender <- ""
if (sex=="Female") {gender<<- "women"} else {gender <<- "men"}
if (sex=="Female") {gender_cap<<- "Women"} else {gender_cap <<- "Men"}
pronoun_conv<<- c("Female" = "she", "Male" = "he")
pronoun_conv_obj<<- c("Female" = "her", "Male" = "him")
pronoun_conv_poss<<- c("Female" = "her", "Male" = "his")
pronoun_conv_poss_cap<<- c("Female" = "Her", "Male" = "His")
pronoun<<- pronoun_conv[sex]
pronoun_obj<<- pronoun_conv_obj[sex]
pronoun_poss<<- pronoun_conv_poss[sex]
pronoun_poss_cap<<- pronoun_conv_poss_cap[sex]
salutation<<- as.character(pdb_data[i, "salutation"])
fb_date1 <- pdb_data[i, "feedback_date"]
if (is.na(fb_date1)) {feedback_date1 <<- "UNKNOWN"} else {feedback_date1 <<- format(as.Date(fb_date1), "%m/%d/%Y")}
# Compiling Physician Data
first_name_physician1<<- pdb_data[i, "feedback_physician1_first_name"]
last_name_physician1<<- pdb_data[i, "feedback_physician1_last_name"]
credentials1<<- pdb_data[i,"feedback_physician1_credentials"]
street_address_physician1<<- pdb_data[i, "feedback_physician1_street_address"]
city_physician1<<- pdb_data[i, "feedback_physician1_city"]
state_physician1<<- pdb_data[i, "feedback_physician1_state"]
zip_physician1<<- pdb_data[i, "feedback_physician1_zip"]
first_name_physician2<<- pdb_data[i, "feedback_physician2_first_name"]
last_name_physician2<<- pdb_data[i, "feedback_physician2_last_name"]
credentials2<<- pdb_data[i,"feedback_physician2_credentials"]
street_address_physician2<<- pdb_data[i, "feedback_physician2_street_address"]
city_physician2<<- pdb_data[i, "feedback_physician2_city"]
state_physician2<<- pdb_data[i, "feedback_physician2_state"]
zip_physician2<<- pdb_data[i, "feedback_physician2_zip"]
first_name_physician3<<- pdb_data[i, "feedback_physician3_first_name"]
last_name_physician3<<- pdb_data[i, "feedback_physician3_last_name"]
credentials3<<- pdb_data[i,"feedback_physician3_credentials"]
street_address_physician3<<- pdb_data[i, "feedback_physician3_street_address"]
city_physician3<<- pdb_data[i, "feedback_physician3_city"]
state_physician3<<- pdb_data[i, "feedback_physician3_state"]
zip_physician3<<- pdb_data[i, "feedback_physician3_zip"]
first_name_physician4<<- pdb_data[i, "feedback_physician4_first_name"]
last_name_physician4<<- pdb_data[i, "feedback_physician4_last_name"]
credentials4<<- pdb_data[i,"feedback_physician4_credentials"]
street_address_physician4<<- pdb_data[i, "feedback_physician4_street_address"]
city_physician4<<- pdb_data[i, "feedback_physician4_city"]
state_physician4<<- pdb_data[i, "feedback_physician4_state"]
zip_physician4<<- pdb_data[i, "feedback_physician4_zip"]
first_name_physician5<<- pdb_data[i, "feedback_physician5_first_name"]
last_name_physician5<<- pdb_data[i, "feedback_physician5_last_name"]
street_address_physician5<<- pdb_data[i, "feedback_physician5_street_address"]
credentials5<<- pdb_data[i,"feedback_physician5_credentials"]
city_physician5<<- pdb_data[i, "feedback_physician5_city"]
state_physician5<<- pdb_data[i, "feedback_physician5_state"]
zip_physician5<<- pdb_data[i, "feedback_physician5_zip"]
if (is.na(first_name_physician1)) {first_name_physician1<<- ""} else {first_name_physician1<<- paste0("     1.  ",pdb_data[i, "feedback_physician1_first_name"])}
if (is.na(last_name_physician1)) {last_name_physician1<<- ""} else {last_name_physician1<<- paste0(pdb_data[i, "feedback_physician1_last_name"])}
if (is.na(street_address_physician1)) {street_address_physician1<<- ""} else {street_address_physician1<<- paste0("          ",pdb_data[i, "feedback_physician1_street_address"])}
if (is.na(city_physician1)) {city_physician1<<- ""} else {city_physician1<<- paste0("          ",pdb_data[i, "feedback_physician1_city"],",")}
state_physician1<<- pdb_data[i, "feedback_physician1_state"]
if (is.na(state_physician1)) {state_physician1<<- ""}
zip_physician1<<- pdb_data[i, "feedback_physician1_zip"]
if (is.na(zip_physician1)) {zip_physician1<<- ""}
if (is.na(first_name_physician2)) {first_name_physician2<<- ""} else {first_name_physician2<<- paste0("     2.  ",pdb_data[i, "feedback_physician2_first_name"])}
if (is.na(last_name_physician2)) {last_name_physician2<<- ""} else {last_name_physician2<<- paste0(pdb_data[i, "feedback_physician2_last_name"])}
if (is.na(street_address_physician2)) {street_address_physician2<<- ""} else {street_address_physician2<<- paste0("          ",pdb_data[i, "feedback_physician2_street_address"])}
if (is.na(city_physician2)) {city_physician2<<- ""} else {city_physician2<<- paste0("          ",pdb_data[i, "feedback_physician2_city"],",")}
state_physician2<<- pdb_data[i, "feedback_physician2_state"]
if (is.na(state_physician2)) {state_physician2<<- ""}
zip_physician2<<- pdb_data[i, "feedback_physician2_zip"]
if (is.na(zip_physician2)) {zip_physician2<<- ""}
if (is.na(first_name_physician3)) {first_name_physician3<<- ""} else {first_name_physician3<<- paste0("     3.  ",pdb_data[i, "feedback_physician3_first_name"])}
if (is.na(last_name_physician3)) {last_name_physician3<<- ""} else {last_name_physician3<<- paste0(pdb_data[i, "feedback_physician3_last_name"])}
if (is.na(street_address_physician3)) {street_address_physician3<<- ""} else {street_address_physician3<<- paste0("          ",pdb_data[i, "feedback_physician3_street_address"])}
if (is.na(city_physician3)) {city_physician3<<- ""} else {city_physician3<<- paste0("          ",pdb_data[i, "feedback_physician3_city"],",")}
state_physician3<<- pdb_data[i, "feedback_physician3_state"]
if (is.na(state_physician3)) {state_physician3<<- ""}
zip_physician3<<- pdb_data[i, "feedback_physician3_zip"]
if (is.na(zip_physician3)) {zip_physician3<<- ""}
if (is.na(first_name_physician4)) {first_name_physician4<<- ""} else {first_name_physician4<<- paste0("     3.  ",pdb_data[i, "feedback_physician4_first_name"])}
if (is.na(last_name_physician4)) {last_name_physician4<<- ""} else {last_name_physician4<<- paste0(pdb_data[i, "feedback_physician4_last_name"])}
if (is.na(street_address_physician4)) {street_address_physician4<<- ""} else {street_address_physician4<<- paste0("          ",pdb_data[i, "feedback_physician4_street_address"])}
if (is.na(city_physician4)) {city_physician4<<- ""} else {city_physician4<<- paste0("          ",pdb_data[i, "feedback_physician4_city"],",")}
state_physician4<<- pdb_data[i, "feedback_physician4_state"]
if (is.na(state_physician4)) {state_physician4<<- ""}
zip_physician4<<- pdb_data[i, "feedback_physician4_zip"]
if (is.na(zip_physician4)) {zip_physician4<<- ""}
if (is.na(first_name_physician5)) {first_name_physician5<<- ""} else {first_name_physician5<<- paste0("     3.  ",pdb_data[i, "feedback_physician5_first_name"])}
if (is.na(last_name_physician5)) {last_name_physician5<<- ""} else {last_name_physician5<<- paste0(pdb_data[i, "feedback_physician5_last_name"])}
if (is.na(street_address_physician5)) {street_address_physician5<<- ""} else {street_address_physician5<<- paste0("          ",pdb_data[i, "feedback_physician5_street_address"])}
if (is.na(city_physician5)) {city_physician5<<- ""} else {city_physician5<<- paste0("          ",pdb_data[i, "feedback_physician5_city"],",")}
state_physician5<<- pdb_data[i, "feedback_physician5_state"]
if (is.na(state_physician5)) {state_physician5<<- ""}
zip_physician5<<- pdb_data[i, "feedback_physician5_zip"]
if (is.na(zip_physician5)) {zip_physician5<<- ""}
# Epoch Selector
Epoch_conv <- c("Enrollment","18-Month","3-Year","5-Year","7-Year","9-Year","11-Year","13-Year")
Epoc_conv <- c("enrollment","18-month","3-year","5-year","7-year","9-year","11-year","13-year")
Epoch <<- Epoch_conv[e]; Epoc <<- Epoc_conv[e]
epoch_conv <- c("enroll","18mos","36mos","60mos","7yr","9yr","11yr","13yr")
epoch <<- epoch_conv[e]
epoch_conv2 <- c("","3yr_","5yr_","7yr_","9yr_","11yr_","13yr_")
ep_next <<- epoch_conv2[e]
ep <- epoch
date_next <<- paste0("visit_estimate_",ep_next,"date")
date_ty <<- format(as.Date(pdb_data[, date_next]), "%B %Y")
enroll_date <<- format(as.Date(pdb_data$visit1_date), "%m/%d/%Y")
if (is.na(enroll_date)) {enroll_date <<- format(as.Date(map_data[1, "visit1_date"]), "%m/%d/%Y")}
age <- pdb_data$age
edu <- pdb_data$education
race <- pdb_data$np_norm_race
if (is.na(race)) {race <- pdb_data$race}
if (age < 55) {age_r <- "50-54"}; if (age < 60 & age >= 55) {age_r <- "55-59"}; if (age < 65 & age >= 60) {age_r <- "60-64"}
if (age < 70 & age >= 65) {age_r <- "65-69"}; if (age < 75 & age >= 70) {age_r <- "70-74"}
if (age < 80 & age >= 75) {age_r <- "75-79"}; if (age >= 80) {age_r <- "80-85"}
if (edu < 9) {edu_r <- "7-8"}; if (edu >= 9 & edu < 12 ) {edu_r <- "9-11"}; if (edu == 12 ) {edu_r <- "12"}
if (edu >= 13 & edu < 16 ) {edu_r <- "13-15"}; if (edu >= 16 & edu < 18 ) {edu_r <- "16-17"}
if (edu >= 18) {edu_r <- "18-20"}
sex_conv <- c("Male" = "M","Female"="F")
sex_r <- sex_conv[sex]
race_conv <- c("White/Caucasian"="C","African American/Black"="AA")
race_r <- race_conv[race]
print("Creating Data Tables")
df <- data.frame(
Test = c("Heart rate", "Blood pressure", "Height", "Weight", "Body Mass Index"),
Test.1 = c("Heart rate", "Blood pressure", "Height", "Weight", "Body Mass Index"),
CR = c(echo_data$echo_hrate, echo_data$echo_read_sbp, paste0(round(echo_data$height*0.393701)," inches"), paste0(round(echo_data$weight*2.205)," lbs"), round((echo_data$weight/(echo_data$height/100)^2), digits = 1)),
CR = c(echo_data$echo_hrate, echo_data$echo_read_dbp, paste0(round(echo_data$height*0.393701)," inches"), paste0(round(echo_data$weight*2.205)," lbs"), round((echo_data$weight/(echo_data$height/100)^2), digits = 1)),
NR=c("60-100", "<120 / <80", "-", "-", "18.5-24.9")
)
df[df == "-9999" | df == "-3937 inches" | df == "-22048 lbs" | df == "-1" | df == "Missing" | is.na(df)] <-"-"
if(any(which(df=="-")==31)) {df <- df[-c(7,8)]}
if(any(which(df=="-")==21)) {df <- df[-c(5,6)]}
ft <- flextable(df)
ft <- set_header_labels(ft, Test = "Test", Test.1="Test",
CR = paste0("Current Results ", enroll_date),CR.1 = paste0("Current Results ", enroll_date),
NR = "Normal Range*" )
ft <- bg(ft, bg="grey",part = "header")
ft <- font(ft,fontname = "Arial",part = "header")
ft <- font(ft,fontname = "Arial",part = "body")
ft <- align(ft, align = "center", part="header")
ft <- align(ft, align = "center", part="body")
ft <- theme_box(ft)
ft <- fontsize(ft, j=1:5, size = 10, part="header")
ft <- fontsize(ft, j=1:5, size = 10, part="body")
ft <- width(ft,j = 5, width = 1)
ft <- merge_h(ft,part = "header")
ft <- merge_h_range(ft,i = 1:5,j1=1, j2=2 ,part = "body")
ft <- merge_h_range(ft,i = 1,j1=3, j2=4 ,part = "body")
#ft <- merge_h_range(ft,i = 1,j1=5, j2=6 ,part = "body")
#ft <- merge_h_range(ft,i = 1,j1=7, j2=8 ,part = "body")
ft <- merge_h_range(ft,i = 3:5,j1=3, j2=4 ,part = "body")
#ft <- merge_h_range(ft,i = 3:5,j1=5, j2=6 ,part = "body")
#ft <- merge_h_range(ft,i = 3:5,j1=7, j2=8 ,part = "body")
ft <- width(ft,j = 3:4, width = .5)
ft <- width(ft, j=1:2, width = .75)
ft <- align(ft, i = 1:3, j = 1:2, align="left",part="body")
evens<-c(4)
for (ii in 3:(ncol(df)-1)) {
#Heart rate
if (df[1,ii]=="-"){
#print(paste0(ii,":",df[1,ii]))
ft <- bold(ft, i = 1, j = ii, bold = FALSE, part = "body")}
else {
if ((as.integer(df[1,ii]) < 60) | (as.integer(df[1,ii]) >100)){
ft <- bold(ft, i = 1, j = ii, bold = TRUE, part = "body")}
}
#Blood pressure - systolic
if (df[2,ii]=="-"){
print(paste0(ii,":",df[2,ii]))
ft <- bold(ft, i = 2, j = ii, bold = FALSE, part = "body")}
else {
if (as.integer(df[2,ii]) > 120){
ft <- bold(ft, i = 2, j = ii, bold = TRUE, part = "body")}
}
#BMI
if (df[5,ii]=="-"){
print(paste0(ii,":",df[5,ii]))
ft <- bold(ft, i = 5, j = ii, bold = FALSE, part = "body")}
else {
if ((as.double(df[5,ii]) < 18.5 | as.double(df[5,ii]) > 24.9)){
ft <- bold(ft, i = 5, j = ii, bold = TRUE, part = "body")}
}
}
#Blood pressure -- diastolic
for (ii in evens) {
#Blood pressure
if (df[2,ii]=="-"){
#print(paste0(ii,":",df[2,ii]))
ft <- bold(ft, i = 2, j = ii, bold = FALSE, part = "body")}
else {
if ((as.integer(df[2,ii]) > 80)){
ft <- bold(ft, i = 2, j = ii, bold = TRUE, part = "body")}
}
}
df2 <- data.frame(
Test1 = c("Cholesterol", "Cholesterol", "Cholesterol", "Cholesterol", "Blood Sugar", "Blood Sugar", "Blood Sugar", "Thyroid", "Inflammation"),
Test2 = c("Total","HDL", "LDL", "Triglycerides", "Hemoglobin A1C", "Fasting Insulin", "Fasting Glucose", "Thyroid Stimulating Hormone (TSH)", "High Sensitivity C-Reactive Protein"),
CR = as.character(c(echo_data$bld_c_chol, echo_data$bld_c_hdlc, echo_data$bld_c_ldlc, echo_data$bld_c_trig, echo_data$bld_c_hgba1c, echo_data$bld_c_insulin, echo_data$bld_c_glucose, echo_data$bld_c_tsh, echo_data$bld_c_crp)),
NR = c("<200", "men >40, women >50", "<100", "<150", "<5.7", "<17", "70-99", "0.35-3.6", "0-2.9")
)
df2[df2 == "-9999" | is.na(df2)] <-"-"
if(any(which(df2=="-")==37)) {df2 <- df2[-c(5)]}
if(any(which(df2=="-")==28)) {df2 <- df2[-c(4)]}
ft2 <- flextable(df2)
ft2 <- set_header_labels(ft2, Test1 = "Test", Test2 = "Test", CR = paste0("Current Results ", enroll_date), NR = "Normal Range/\nCut-off*" )
ft2 <- bg(ft2, bg="grey",part = "header")
ft2 <- font(ft2,fontname = "Arial",part = "header")
ft2 <- font(ft2,fontname = "Arial",part = "body")
ft2 <- theme_box(ft2)
ft2 <- width(ft2, j = 1:4, width=.9)
ft2 <- merge_at(ft2, i = 1, j = 1:2, part = "header")
ft2 <- merge_at(ft2, i = 1:4, j = 1, part = "body")
ft2 <- merge_at(ft2, i = 5:7, j = 1, part = "body")
ft2 <- fontsize(ft2, j=1, size = 9, part="body")
ft2 <- fontsize(ft2, j=1:4, size = 10, part="header")
ft2 <- fontsize(ft2, j=2:4, size = 10, part="body")
ft2 <- align(ft2, align = "center", part="header")
ft2 <- align(ft2, align = "center", part="body")
ft2 <- align(ft2, i=1:9, j=2, align="left",part="body")
ft2 <- valign(ft2, i=1:9, j=3:4, valign="center", part="body")
ft2 <- height(ft2, height = .4, part = "header")
#ft2 <- width(ft2, j = 1, width = .85)
ft2 <- width(ft2, j = 2, width = 1.25)
for (ii in 3:(ncol(df2)-1)) {
if (df2[1,ii]=="-"){ft2<-bold(ft2, i = 1, j = ii, bold = FALSE, part = "body")}else{if(as.integer(df2[1,ii]) > 200){ft2<-bold(ft2, i = 1, j = ii, bold = TRUE, part = "body")}}
if (df2[2,ii]=="-"){
ft2<-bold(ft2, i = 2, j = ii, bold = FALSE, part = "body")}
else{
if (sex == "Female" & as.integer(df2[2,ii]) < 50){ft2 <- bold(ft2, i = 2, j = ii, bold = TRUE, part = "body")}
if (sex == "Male" & as.integer(df2[2,ii]) < 40){ft2 <- bold(ft2, i = 2, j = ii, bold = TRUE, part = "body")}
}
if (df2[3,ii]=="-"){ft2<-bold(ft2, i = 3, j = ii, bold = FALSE, part = "body")}else{if(as.integer(df2[3,ii]) > 100){ft2<-bold(ft2, i = 3, j = ii, bold = TRUE, part = "body")}}
if (df2[4,ii]=="-"){ft2<-bold(ft2, i = 4, j = ii, bold = FALSE, part = "body")}else{if(as.integer(df2[4,ii]) > 150){ft2<-bold(ft2, i = 4, j = ii, bold = TRUE, part = "body")}}
if (df2[5,ii]=="-"){ft2<-bold(ft2, i = 5, j = ii, bold = FALSE, part = "body")}else{if(as.integer(df2[5,ii]) > 5.7){ft2<-bold(ft2, i = 5, j = ii, bold = TRUE, part = "body")}}
if(class(df2[6,ii])=="character") {df2[6,ii] <- NA} else {
if (is.na(as.double(df2[6,ii]))) {ft2 <- bold(ft2, i = 6, j = ii, bold = TRUE, part = "body")} else {
if (df2[6,ii]=="-"){ft2<-bold(ft2, i = 6, j = ii, bold = FALSE, part = "body")}else{if(as.integer(df2[6,ii]) > 17){ft2<-bold(ft2, i = 6, j = ii, bold = TRUE, part = "body")}}
}
}
if (df2[7,ii]=="-"){ft2<-bold(ft2, i = 7, j = ii, bold = FALSE, part = "body")}else{if(as.integer(df2[7,ii]) > 99 | as.integer(df2[7,ii]) < 70){ft2<-bold(ft2, i = 7, j = ii, bold = TRUE, part = "body")}}
if (df2[8,ii]=="-"){ft2<-bold(ft2, i = 8, j = ii, bold = FALSE, part = "body")}else{if(as.integer(df2[8,ii]) > 3.6 | as.integer(df2[8,ii]) < 0.35){ft2<-bold(ft2, i = 8, j = ii, bold = TRUE, part = "body")}}
if(class(df2[9,ii])=="character") {df2[9,ii] <- NA} else {
if (is.na(as.double(df2[9,ii]))) {ft2 <- bold(ft2, i = 9, j = ii, bold = TRUE, part = "body")} else {
if ((as.double(df2[9,ii]) > 2.9) | (as.double(df2[9,ii]) < 0)) {ft2 <- bold(ft2, i = 9, j = ii, bold = TRUE, part = "body")}}
}
}
print("Enrollment Memory Results")
incomplete <- any(dde_data==-7777); if (is.na(incomplete)) {incomplete <- 0}
dnf <- any(dde_data==-9999); if (is.na(dnf)) {dnf <- 0}
miss <- any(is.na(dde_data[ij,3:28])); if(is.na(miss)) {miss <- 0}
(incomplete | dnf | miss)
# CVLT
np_cvlt1to5_tscore <- edc_data["np_cvlt1to5_tscore"]
np_cvlt1to5_z <- (np_cvlt1to5_tscore - 50)/10
np_cvlt_sdfr_z <- edc_data["np_cvlt_sdfr_zscore"]
np_cvlt_ldfr_z <- edc_data["np_cvlt_ldfr_zscore"]
np_cvltrecog_discrim_z <- edc_data["np_cvltrecog_discrim_zscore"]
# Biber
np_biber_t1to5 <- dde_data[ij,"np_biber_t1to5"];np_biber_t1to5_z <- (np_biber_t1to5 - 114.5) / 34.7
np_biber_sd <- dde_data[ij,"np_biber_sd"];np_biber_sd_z <- (np_biber_sd - 26.4) / 7
np_biber_ld <- dde_data[ij,"np_biber_ld"];np_biber_ld_z <- (np_biber_ld - 28) / 7
#Tower
np_tower1 <- as.integer(dde_data[ij,"np_tower1"])-1
np_tower2 <- as.integer(dde_data[ij,"np_tower2"])-1
np_tower3 <- as.integer(dde_data[ij,"np_tower3"])-1
np_tower4 <- as.integer(dde_data[ij,"np_tower4"])-1
np_tower5 <- as.integer(dde_data[ij,"np_tower5"])-1
np_tower6 <- as.integer(dde_data[ij,"np_tower6"])-1
np_tower7 <- as.integer(dde_data[ij,"np_tower7"])-1
np_tower8 <- as.integer(dde_data[ij,"np_tower8"])-1
np_tower9 <- as.integer(dde_data[ij,"np_tower9"])-1
np_tower <- sum(np_tower1,np_tower2,np_tower3,np_tower4,np_tower5,np_tower6,np_tower7,np_tower8,np_tower9)
tower_ex <- read_excel(ex_path, sheet = 1)
np_tower_ss <- tower_ex[as.integer(ceiling(np_tower))+1,as.character(age)]
np_tower_z <- (as.integer(np_tower_ss)-10)/3
# Animal
np_anim_q1 <- dde_data[ij,"np_anim_q1"]
np_anim_q2 <- dde_data[ij,"np_anim_q2"]
np_anim_q3 <- dde_data[ij,"np_anim_q3"]
np_anim_q4 <- dde_data[ij,"np_anim_q4"]
np_anim <- sum(c(np_anim_q1, np_anim_q2, np_anim_q3, np_anim_q4))
anim_ex <- read_excel(ex_path, sheet = "heaton_scaled")
np_anim_sscore <- anim_ex[as.integer(ceiling(np_anim))+1,4]
anim_ex <- read_excel(ex_path, sheet = "heaton_animals")
var_anim <- paste0(sex_r,"/",edu_r,"/",age_r,"/",race_r)
np_anim_tscore <- anim_ex[as.integer(ceiling(20-np_anim_sscore)),var_anim]
np_anim_z <- (as.integer(np_anim_tscore) - 50) / 10
np_bnt <- dde_data[ij,"np_bnt"]
np_bnt_z <- (np_bnt - 26) / 3.4
np_inhibit <- dde_data[ij,"np_inhibit"]
inhibit_ex <- read_excel(ex_path, sheet = 12)
np_inhibit_ss <- inhibit_ex[as.integer(ceiling(np_inhibit))+1,as.character(age)]
np_inhibit_z <- (as.integer(np_inhibit_ss)-10)/3
np_fas <- dde_data[ij,"np_fas"]
fas_ex <- read_excel(ex_path, sheet = "heaton_scaled")
np_fas_sscore <- fas_ex[as.integer(ceiling(np_fas))+1,5]
fas_ex <- read_excel(ex_path, sheet = "heaton_fas")
var_fas <- paste0(sex_r,"/",edu_r,"/",age_r,"/",race_r)
np_fas_tscore <- fas_ex[as.integer(ceiling(20-np_fas_sscore)),var_fas]
np_fas_z <- (as.integer(np_fas_tscore) - 50) / 10
np_tmtb <- dde_data[ij,"np_tmtb"]
if (np_tmtb>599) {np_tmtb <- 599}
tmtb_ex <- read_excel(ex_path, sheet = 6)
np_tmtb_ss <- tmtb_ex[as.integer(ceiling(np_tmtb))+1,as.character(age)]
np_tmtb_z <- (as.integer(np_tmtb_ss) - 10)/3
np_tmta <- dde_data[ij,"np_tmta"]
if (np_tmta>599) {np_tmta <- 599}
tmta_ex <- read_excel(ex_path, sheet = 3)
np_tmta_ss <- tmta_ex[as.integer(ceiling(np_tmta))+1,as.character(age)]
np_tmta_z <- (as.integer(np_tmta_ss) - 10)/3
np_hvot <- dde_data[ij,"np_hvot"]
if (age < 55) {hvot_ex <- read_excel(ex_path, sheet = 22)}
if (55 <= age | age < 60) {hvot_ex <- read_excel(ex_path, sheet = 23)}
if (60 <= age | age < 65) {hvot_ex <- read_excel(ex_path, sheet = 24)}
if (65 <= age) {hvot_ex <- read_excel(ex_path, sheet = 25)}
np_hvot_corrected <- hvot_ex[as.integer(ceiling(np_hvot))+1,as.integer(edu)+2]
hvot_t_ex <- read_excel(ex_path, sheet = 26)
np_hvot_tscore <- hvot_t_ex[as.integer(np_hvot_corrected)+1,2]
np_hvot_z <- -(as.integer(np_hvot_tscore) - 50) / 10
np_digsymb <- dde_data[ij,"np_digsymb"]
digsymb_ex <- read_excel(ex_path, sheet = 21)
np_digsymb_ss <- digsymb_ex[as.integer(ceiling(np_digsymb))+1,as.character(age)]
np_digsymb_z <- (as.integer(np_digsymb_ss)-10)/3
np_color <- dde_data[ij,"np_color"]
color_ex <- read_excel(ex_path, sheet = 10)
np_color_ss <- color_ex[as.integer(ceiling(np_color))+1,as.character(age)]
np_color_z <- (as.integer(np_color_ss)-10)/3
np_word <- dde_data[ij,"np_word"]
word_ex <- read_excel(ex_path, sheet = 11)
np_word_ss <- word_ex[as.integer(ceiling(np_word))+1,as.character(age)]
np_word_z <- (as.integer(np_word_ss)-10)/3
# composite scores
mem_w<<- cbind(as.numeric(np_cvlt1to5_z),as.numeric(np_cvlt_sdfr_z),as.numeric(np_cvlt_ldfr_z),as.numeric(np_cvltrecog_discrim_z))
memory_words<<- rowMeans(mem_w)
mem_s<<- cbind(np_biber_t1to5_z, np_biber_sd_z, np_biber_ld_z)
memory_shapes<<- rowMeans(mem_s)
lang<<- cbind(np_anim_z,np_bnt_z)
language<- rowMeans(lang)
multitasking<<- rowMeans(cbind(np_tower_z, np_inhibit_z, np_fas_z, np_tmtb_z))
visuospatial<<- np_hvot_z
attention<- rowMeans(cbind(np_digsymb_z, np_color_z, np_word_z, np_tmta_z))
counts<- c(memory_words,memory_shapes,language,multitasking,visuospatial,attention)
specie<- c("Memory for\n Words","Memory for\n Shapes","Language","Multi-tasking\n and planning","Visuospatial\nskills","Attention")
condition<- rep(c(enroll_date),6)
level_order<- c("Memory for\n Words","Memory for\n Shapes","Language","Multi-tasking\n and planning","Visuospatial\nskills","Attention")
cond_order<- c(enroll_date)
spec<- factor(specie,levels = level_order)
cond<- factor(condition,levels = cond_order)
data<- data.frame(specie,condition,counts)
countss<- counts+3
patterns<- rep(c('crosshatch'),6)
pattern_factor<- c('crosshatch')
patternss<- factor(patterns,levels = pattern_factor)
for (ii in 1:length(countss)) {if (countss[ii]<0.25) {countss[ii]<-0.25}; if (countss[ii] > 5.9) {countss[ii]<-5.9}}
countss
memory_words
mem_w
np_cvlt1to5_z
dde_data
edc_data
