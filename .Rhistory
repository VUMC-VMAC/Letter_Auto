ft2<-bold(ft2, i = 2, j = ii, bold = FALSE, part = "body")}
else{
if (sex == "Female" & as.integer(df2[2,ii]) < 50){ft2 <- bold(ft2, i = 2, j = ii, bold = TRUE, part = "body")}
if (sex == "Male" & as.integer(df2[2,ii]) < 40){ft2 <- bold(ft2, i = 2, j = ii, bold = TRUE, part = "body")}
}
if (df2[3,ii]=="-"){ft2<-bold(ft2, i = 3, j = ii, bold = FALSE, part = "body")}else{if(as.integer(df2[3,ii]) > 100){ft2<-bold(ft2, i = 3, j = ii, bold = TRUE, part = "body")}}
if (df2[4,ii]=="-"){ft2<-bold(ft2, i = 4, j = ii, bold = FALSE, part = "body")}else{if(as.integer(df2[4,ii]) > 150){ft2<-bold(ft2, i = 4, j = ii, bold = TRUE, part = "body")}}
if (df2[5,ii]=="-"){ft2<-bold(ft2, i = 5, j = ii, bold = FALSE, part = "body")}else{if(as.integer(df2[5,ii]) > 5.7){ft2<-bold(ft2, i = 5, j = ii, bold = TRUE, part = "body")}}
if(class(df2[6,ii])=="character") {df2[6,ii] <- NA} else {
if (is.na(as.double(df2[6,ii]))) {ft2 <- bold(ft2, i = 6, j = ii, bold = TRUE, part = "body")} else {
if (df2[6,ii]=="-"){ft2<-bold(ft2, i = 6, j = ii, bold = FALSE, part = "body")}else{if(as.integer(df2[6,ii]) > 17){ft2<-bold(ft2, i = 6, j = ii, bold = TRUE, part = "body")}}
}
}
if (df2[7,ii]=="-"){ft2<-bold(ft2, i = 7, j = ii, bold = FALSE, part = "body")}else{if(as.integer(df2[7,ii]) > 99 | as.integer(df2[7,ii]) < 70){ft2<-bold(ft2, i = 7, j = ii, bold = TRUE, part = "body")}}
if (df2[8,ii]=="-"){ft2<-bold(ft2, i = 8, j = ii, bold = FALSE, part = "body")}else{if(as.integer(df2[8,ii]) > 3.6 | as.integer(df2[8,ii]) < 0.35){ft2<-bold(ft2, i = 8, j = ii, bold = TRUE, part = "body")}}
if(class(df2[9,ii])=="character") {df2[9,ii] <- NA} else {
if (is.na(as.double(df2[9,ii]))) {ft2 <- bold(ft2, i = 9, j = ii, bold = TRUE, part = "body")} else {
if ((as.double(df2[9,ii]) > 2.9) | (as.double(df2[9,ii]) < 0)) {ft2 <- bold(ft2, i = 9, j = ii, bold = TRUE, part = "body")}}
}
}
print("Enrollment Memory Results")
incomplete <- any(dde_data==-7777); if (is.na(incomplete)) {incomplete <- 0}
dnf <- any(dde_data==-9999); if (is.na(dnf)) {dnf <- 0}
miss <- any(is.na(dde_data[ij,3:28])); if(is.na(miss)) {miss <- 0}
(incomplete | dnf | miss)
# CVLT
np_cvlt1to5_tscore <- edc_data["np_cvlt1to5_tscore"]
np_cvlt1to5_z <- (np_cvlt1to5_tscore - 50)/10
np_cvlt_sdfr_z <- edc_data["np_cvlt_sdfr_zscore"]
np_cvlt_ldfr_z <- edc_data["np_cvlt_ldfr_zscore"]
np_cvltrecog_discrim_z <- edc_data["np_cvltrecog_discrim_zscore"]
# Biber
np_biber_t1to5 <- dde_data[ij,"np_biber_t1to5"];np_biber_t1to5_z <- (np_biber_t1to5 - 114.5) / 34.7
np_biber_sd <- dde_data[ij,"np_biber_sd"];np_biber_sd_z <- (np_biber_sd - 26.4) / 7
np_biber_ld <- dde_data[ij,"np_biber_ld"];np_biber_ld_z <- (np_biber_ld - 28) / 7
#Tower
np_tower1 <- as.integer(dde_data[ij,"np_tower1"])-1
np_tower2 <- as.integer(dde_data[ij,"np_tower2"])-1
np_tower3 <- as.integer(dde_data[ij,"np_tower3"])-1
np_tower4 <- as.integer(dde_data[ij,"np_tower4"])-1
np_tower5 <- as.integer(dde_data[ij,"np_tower5"])-1
np_tower6 <- as.integer(dde_data[ij,"np_tower6"])-1
np_tower7 <- as.integer(dde_data[ij,"np_tower7"])-1
np_tower8 <- as.integer(dde_data[ij,"np_tower8"])-1
np_tower9 <- as.integer(dde_data[ij,"np_tower9"])-1
np_tower <- sum(np_tower1,np_tower2,np_tower3,np_tower4,np_tower5,np_tower6,np_tower7,np_tower8,np_tower9)
tower_ex <- read_excel(ex_path, sheet = 1)
np_tower_ss <- tower_ex[as.integer(ceiling(np_tower))+1,as.character(age)]
np_tower_z <- (as.integer(np_tower_ss)-10)/3
# Animal
np_anim_q1 <- dde_data[ij,"np_anim_q1"]
np_anim_q2 <- dde_data[ij,"np_anim_q2"]
np_anim_q3 <- dde_data[ij,"np_anim_q3"]
np_anim_q4 <- dde_data[ij,"np_anim_q4"]
np_anim <- sum(c(np_anim_q1, np_anim_q2, np_anim_q3, np_anim_q4))
anim_ex <- read_excel(ex_path, sheet = "heaton_scaled")
np_anim_sscore <- anim_ex[as.integer(ceiling(np_anim))+1,4]
anim_ex <- read_excel(ex_path, sheet = "heaton_animals")
var_anim <- paste0(sex_r,"/",edu_r,"/",age_r,"/",race_r)
np_anim_tscore <- anim_ex[as.integer(ceiling(20-np_anim_sscore)),var_anim]
np_anim_z <- (as.integer(np_anim_tscore) - 50) / 10
np_bnt <- dde_data[ij,"np_bnt"]
np_bnt_z <- (np_bnt - 26) / 3.4
np_inhibit <- dde_data[ij,"np_inhibit"]
inhibit_ex <- read_excel(ex_path, sheet = 12)
np_inhibit_ss <- inhibit_ex[as.integer(ceiling(np_inhibit))+1,as.character(age)]
np_inhibit_z <- (as.integer(np_inhibit_ss)-10)/3
np_fas <- dde_data[ij,"np_fas"]
fas_ex <- read_excel(ex_path, sheet = "heaton_scaled")
np_fas_sscore <- fas_ex[as.integer(ceiling(np_fas))+1,5]
fas_ex <- read_excel(ex_path, sheet = "heaton_fas")
var_fas <- paste0(sex_r,"/",edu_r,"/",age_r,"/",race_r)
np_fas_tscore <- fas_ex[as.integer(ceiling(20-np_fas_sscore)),var_fas]
np_fas_z <- (as.integer(np_fas_tscore) - 50) / 10
np_tmtb <- dde_data[ij,"np_tmtb"]
if (np_tmtb>599) {np_tmtb <- 599}
tmtb_ex <- read_excel(ex_path, sheet = 6)
np_tmtb_ss <- tmtb_ex[as.integer(ceiling(np_tmtb))+1,as.character(age)]
np_tmtb_z <- (as.integer(np_tmtb_ss) - 10)/3
np_tmta <- dde_data[ij,"np_tmta"]
if (np_tmta>599) {np_tmta <- 599}
tmta_ex <- read_excel(ex_path, sheet = 3)
np_tmta_ss <- tmta_ex[as.integer(ceiling(np_tmta))+1,as.character(age)]
np_tmta_z <- (as.integer(np_tmta_ss) - 10)/3
np_hvot <- dde_data[ij,"np_hvot"]
if (age < 55) {hvot_ex <- read_excel(ex_path, sheet = 22)}
if (55 <= age | age < 60) {hvot_ex <- read_excel(ex_path, sheet = 23)}
if (60 <= age | age < 65) {hvot_ex <- read_excel(ex_path, sheet = 24)}
if (65 <= age) {hvot_ex <- read_excel(ex_path, sheet = 25)}
np_hvot_corrected <- hvot_ex[as.integer(ceiling(np_hvot))+1,as.integer(edu)+2]
hvot_t_ex <- read_excel(ex_path, sheet = 26)
np_hvot_tscore <- hvot_t_ex[as.integer(np_hvot_corrected)+1,2]
np_hvot_z <- -(as.integer(np_hvot_tscore) - 50) / 10
np_digsymb <- dde_data[ij,"np_digsymb"]
digsymb_ex <- read_excel(ex_path, sheet = 21)
np_digsymb_ss <- digsymb_ex[as.integer(ceiling(np_digsymb))+1,as.character(age)]
np_digsymb_z <- (as.integer(np_digsymb_ss)-10)/3
np_color <- dde_data[ij,"np_color"]
color_ex <- read_excel(ex_path, sheet = 10)
np_color_ss <- color_ex[as.integer(ceiling(np_color))+1,as.character(age)]
np_color_z <- (as.integer(np_color_ss)-10)/3
np_word <- dde_data[ij,"np_word"]
word_ex <- read_excel(ex_path, sheet = 11)
np_word_ss <- word_ex[as.integer(ceiling(np_word))+1,as.character(age)]
np_word_z <- (as.integer(np_word_ss)-10)/3
# composite scores
mem_w<<- cbind(as.numeric(np_cvlt1to5_z),as.numeric(np_cvlt_sdfr_z),as.numeric(np_cvlt_ldfr_z),as.numeric(np_cvltrecog_discrim_z))
memory_words<<- rowMeans(mem_w)
mem_s<<- cbind(np_biber_t1to5_z, np_biber_sd_z, np_biber_ld_z)
memory_shapes<<- rowMeans(mem_s)
lang<<- cbind(np_anim_z,np_bnt_z)
language<- rowMeans(lang)
multitasking<<- rowMeans(cbind(np_tower_z, np_inhibit_z, np_fas_z, np_tmtb_z))
visuospatial<<- np_hvot_z
attention<- rowMeans(cbind(np_digsymb_z, np_color_z, np_word_z, np_tmta_z))
counts<- c(memory_words,memory_shapes,language,multitasking,visuospatial,attention)
specie<- c("Memory for\n Words","Memory for\n Shapes","Language","Multi-tasking\n and planning","Visuospatial\nskills","Attention")
condition<- rep(c(enroll_date),6)
level_order<- c("Memory for\n Words","Memory for\n Shapes","Language","Multi-tasking\n and planning","Visuospatial\nskills","Attention")
cond_order<- c(enroll_date)
spec<- factor(specie,levels = level_order)
cond<- factor(condition,levels = cond_order)
data<- data.frame(specie,condition,counts)
countss<- counts+3
patterns<- rep(c('crosshatch'),6)
pattern_factor<- c('crosshatch')
patternss<- factor(patterns,levels = pattern_factor)
for (ii in 1:length(countss)) {if (countss[ii]<0.25) {countss[ii]<-0.25}; if (countss[ii] > 5.9) {countss[ii]<-5.9}}
countss
memory_words
mem_w
np_cvlt1to5_z
dde_data
edc_data
library(ggplot2)
library(plotly)
library(redcapAPI)
library(WordR)
library(officer)
library(Hmisc)
library(tidyverse)
library(flextable)
#library(ggpattern)
#library(patternplot)
library(png)
library(readxl)
#!/usr/bin/env Rscript
token <- "B133433FE3971A3F4A2E433FA9A237E6"
url <- "https://redcap.vanderbilt.edu/api/"
formData <- list("token"=token,
content='record',
action='export',
format='json',
type='flat',
csvDelimiter='',
'records[0]'='183',
'fields[0]'='map_id',
'events[0]'='eligibility_arm_1',
'events[1]'='enrollmentbaseline_arm_1',
'events[2]'='18month_followup_arm_1',
'events[3]'='3year_followup_arm_1',
'events[4]'='5year_followup_arm_1',
'events[5]'='7year_followup_arm_1',
'events[6]'='9year_followup_arm_1',
rawOrLabel='raw',
rawOrLabelHeaders='raw',
exportCheckboxLabel='false',
exportSurveyFields='false',
exportDataAccessGroups='false',
returnFormat='json'
)
response <- httr::POST(url, body = formData, encode = "form")
result <- httr::content(response)
print(result)
#!/usr/bin/env Rscript
token <- "B133433FE3971A3F4A2E433FA9A237E6"
url <- "https://redcap.vanderbilt.edu/api/"
formData <- list("token"=token,
content='report',
format='json',
report_id='313230',
csvDelimiter='',
rawOrLabel='raw',
rawOrLabelHeaders='raw',
exportCheckboxLabel='false',
returnFormat='json'
)
response <- httr::POST(url, body = formData, encode = "form")
result <- httr::content(response)
print(result)
View(response)
View(result)
EDC <- redcapConnection(url = "https://redcap.vanderbilt.edu/api/",
token = "09B0A6B7F207F51C6F656BAE567FA390", conn, project = 119047)
redcapAPI::exportRecords(EDC,records = "186")
a186 <- redcapAPI::exportRecords(EDC,records = "186")
#!/usr/bin/env Rscript
token <- "B133433FE3971A3F4A2E433FA9A237E6"
url <- "https://redcap.vanderbilt.edu/api/"
formData <- list("token"=token,
content='record',
action='export',
format='json',
type='flat',
csvDelimiter='',
'records[0]'='183',
'events[0]'='eligibility_arm_1',
'events[1]'='enrollmentbaseline_arm_1',
'events[2]'='18month_followup_arm_1',
'events[3]'='3year_followup_arm_1',
'events[4]'='5year_followup_arm_1',
'events[5]'='7year_followup_arm_1',
'events[6]'='9year_followup_arm_1',
rawOrLabel='raw',
rawOrLabelHeaders='raw',
exportCheckboxLabel='false',
exportSurveyFields='false',
exportDataAccessGroups='false',
returnFormat='json'
)
response <- httr::POST(url, body = formData, encode = "form")
result2 <- httr::content(response)
print(result2)
View(np_word_ss)
View(result2)
length(result2[[1]])
a186 <- redcapAPI::exportRecords(EDC,records = "186")
#!/usr/bin/env Rscript
token <- "09B0A6B7F207F51C6F656BAE567FA390"
url <- "https://redcap.vanderbilt.edu/api/"
formData <- list("token"=token,
content='record',
action='export',
format='json',
type='flat',
csvDelimiter='',
'records[0]'='183',
'events[0]'='eligibility_arm_1',
'events[1]'='enrollmentbaseline_arm_1',
'events[2]'='18month_followup_arm_1',
'events[3]'='3year_followup_arm_1',
'events[4]'='5year_followup_arm_1',
'events[5]'='7year_followup_arm_1',
'events[6]'='9year_followup_arm_1',
rawOrLabel='raw',
rawOrLabelHeaders='raw',
exportCheckboxLabel='false',
exportSurveyFields='false',
exportDataAccessGroups='false',
returnFormat='json'
)
response <- httr::POST(url, body = formData, encode = "form")
result2 <- httr::content(response)
print(result2)
install.packages("REDCapR")
library(REDCapR)
data183 <- redcap_read(redcap_uri = 119047, records = "183", token = "09B0A6B7F207F51C6F656BAE567FA390")
data183 <- redcap_read(redcap_uri = "119047", records = "183", token = "09B0A6B7F207F51C6F656BAE567FA390")
data183 <- redcap_read_oneshot(redcap_uri = "119047", records = "183", token = "09B0A6B7F207F51C6F656BAE567FA390")
data183 <- redcap_read_oneshot(redcap_uri = "https://redcap.vanderbilt.edu/api/", records = "183", token = "09B0A6B7F207F51C6F656BAE567FA390")
data183 <- redcap_read(redcap_uri = "https://redcap.vanderbilt.edu/api/", records = "183", token = "09B0A6B7F207F51C6F656BAE567FA390")
View(data183)
data183 <- redcap_read(redcap_uri = "https://redcap.vanderbilt.edu/api/", token = "09B0A6B7F207F51C6F656BAE567FA390")
View(data183)
data183$data$map_id
data183 <- redcap_read(redcap_uri = "https://redcap.vanderbilt.edu/api/", token = "09B0A6B7F207F51C6F656BAE567FA390", records = "201")
data183 <- redcap_read(redcap_uri = "https://redcap.vanderbilt.edu/api/", token = "09B0A6B7F207F51C6F656BAE567FA390", records = "183")
data183 <- redcap_read_oneshot(redcap_uri = "https://redcap.vanderbilt.edu/api/", token = "09B0A6B7F207F51C6F656BAE567FA390", records = "183")
data183 <- redcap_read_oneshot(redcap_uri = "https://redcap.vanderbilt.edu/api/", token = "09B0A6B7F207F51C6F656BAE567FA390", records = "183", raw_or_label_headers = "label")
data183 <- redcap_read(redcap_uri = "https://redcap.vanderbilt.edu/api/", token = "09B0A6B7F207F51C6F656BAE567FA390", records = "183", raw_or_label_headers = "label")
data183 <- redcap_read(redcap_uri = "https://redcap.vanderbilt.edu/api/", token = "09B0A6B7F207F51C6F656BAE567FA390", records = "183", fields = "map_id",raw_or_label_headers = "label")
data183 <- redcap_read(redcap_uri = "https://redcap.vanderbilt.edu/api/", token = "09B0A6B7F207F51C6F656BAE567FA390", records = "183", events = "eligibility_arm_1",raw_or_label_headers = "label")
data183$data
View(data183)
data183 <- redcap_read(redcap_uri = "https://redcap.vanderbilt.edu/api/", token = "09B0A6B7F207F51C6F656BAE567FA390", records = "183", events = "enrollmentbaseline_arm_1",raw_or_label_headers = "label")
data183$data
ncol(data183$data)
nrow(data183$data)
data183 <- redcap_read(redcap_uri = "https://redcap.vanderbilt.edu/api/", token = "09B0A6B7F207F51C6F656BAE567FA390", records = "183", events = "18month_followup_arm_1",raw_or_label_headers = "label")
data183$data
ncol(data183$data)
data183 <- redcap_read(redcap_uri = "https://redcap.vanderbilt.edu/api/", token = "09B0A6B7F207F51C6F656BAE567FA390", records = "183", events = "3year_followup_arm_1",raw_or_label_headers = "label")
data183 <- redcap_read(redcap_uri = "https://redcap.vanderbilt.edu/api/", token = "09B0A6B7F207F51C6F656BAE567FA390", records = "183", events = "5year_followup_arm_1",raw_or_label_headers = "label")
ncol(data183$data)
data183 <- redcap_read(redcap_uri = "https://redcap.vanderbilt.edu/api/", token = "09B0A6B7F207F51C6F656BAE567FA390", records = "183", events = "7year_followup_arm_1",raw_or_label_headers = "label")
data183$data
ncol(data183$data)
data183 <- redcap_read(redcap_uri = "https://redcap.vanderbilt.edu/api/", token = "09B0A6B7F207F51C6F656BAE567FA390", records = "183", events = "3year_followup_arm_1",raw_or_label_headers = "label")
data183 <- redcap_read(redcap_uri = "https://redcap.vanderbilt.edu/api/", token = "09B0A6B7F207F51C6F656BAE567FA390", records = "183", fields = "map_id" , events = "3year_followup_arm_1",raw_or_label_headers = "label")
data183$data
data183 <- redcap_read(redcap_uri = "https://redcap.vanderbilt.edu/api/", token = "09B0A6B7F207F51C6F656BAE567FA390", records = "183", forms = "visit_flow_sheet_notes" , events = "3year_followup_arm_1",raw_or_label_headers = "label")
data183 <- redcap_read(redcap_uri = "https://redcap.vanderbilt.edu/api/", token = "09B0A6B7F207F51C6F656BAE567FA390", records = "183", forms = "consent_checklist" , events = "3year_followup_arm_1",raw_or_label_headers = "label")
data183$data
data183 <- redcap_read(redcap_uri = "https://redcap.vanderbilt.edu/api/", token = "09B0A6B7F207F51C6F656BAE567FA390", records = "183", forms = "informant_information" , events = "3year_followup_arm_1",raw_or_label_headers = "label")
data183$data
data183 <- redcap_read(redcap_uri = "https://redcap.vanderbilt.edu/api/", token = "09B0A6B7F207F51C6F656BAE567FA390", records = "183", forms = "visit_flow_sheet_notes" , events = "3year_followup_arm_1",raw_or_label_headers = "label")
data183 <- redcap_read(redcap_uri = "https://redcap.vanderbilt.edu/api/", token = "09B0A6B7F207F51C6F656BAE567FA390", records = "183", forms = "visit_flow_sheet_notes" , events = "3year_followup_arm_1")
data183 <- redcap_read(redcap_uri = "https://redcap.vanderbilt.edu/api/", token = "09B0A6B7F207F51C6F656BAE567FA390", records = "183", forms = "visit_flow_sheet_notes" , events = "5year_followup_arm_1")
data183 <- redcap_read(redcap_uri = "https://redcap.vanderbilt.edu/api/", token = "09B0A6B7F207F51C6F656BAE567FA390", records = "183", forms = "visit_flow_sheet_notes" , events = "3year_followup_arm_1")
data183 <- redcap_read(redcap_uri = "https://redcap.vanderbilt.edu/api/", token = "09B0A6B7F207F51C6F656BAE567FA390", records = "183", fields = "np_notes" , events = "3year_followup_arm_1")
data183 <- redcap_read(redcap_uri = "https://redcap.vanderbilt.edu/api/", token = "09B0A6B7F207F51C6F656BAE567FA390", records = "183", fields = "np_notes" , events = "5year_followup_arm_1")
data183 <- redcap_read(redcap_uri = "https://redcap.vanderbilt.edu/api/", token = "09B0A6B7F207F51C6F656BAE567FA390", records = "183", fields = "np_notes" , events = "3year_followup_arm_1")
data183 <- redcap_read(redcap_uri = "https://redcap.vanderbilt.edu/api/", token = "09B0A6B7F207F51C6F656BAE567FA390", records = "183" , events = "3year_followup_arm_1")
edc_data
e
edc_datas <- edc_datas[which(edc_datas$map_id==as.integer(map_id)),]
edc_data <- edc_datas[which(edc_datas$redcap_event_name == events[epochh+1]),]
if (e == 1) {
edc_elig <- edc_datas[which(edc_datas$redcap_event_name == events[epochh]),]
gds <- edc_elig$gds_total_score
} else {gds <- edc_data$gds_total_score}
gds
shiny::runApp('MAP2_Uploader/Uploader')
runApp('TAP_Uploader/Uploader')
runApp('TAP_Uploader/Uploader')
pwd
runApp('TAP_Uploader/Uploader')
runApp('TAP_Uploader/Uploader')
vmac <- 229
epochh <- 1
library(ggplot2)
library(plotly)
library(redcapAPI)
library(WordR)
library(officer)
library(Hmisc)
library(tidyverse)
library(flextable)
library(ggpattern)
library(patternplot)
library(png)
library(readxl)
ex_path <- paste0("~/Letter_Auto/epoch5dde_lookup.xlsx")
np <- redcapConnection(url = "https://redcap.vanderbilt.edu/api/",
token = "79321D56C26DD34A7F03A318096D77F4", conn, project = 136221)
pdb <- redcapConnection(url = "https://redcap.vanderbilt.edu/api/",
token = "0E16F65FB0A51C570781384D91AA1A78", conn, project = 137402)
edc <- redcapConnection(url = "https://redcap.vanderbilt.edu/api/",
token = "A2F023358C81C065E1D98575795DCD5B", conn, project = 135160)
edc_datas <- exportReports(edc, 280483)
pdb_datas <- exportReports(pdb, 270431)
np_datas <- exportReports(np, 280482)
pdb_datas <- pdb_datas[which(as.integer(as.factor(pdb_datas[,"redcap_event_name"]))== epochh),]
i <- which(pdb_datas["vmac_id"]==as.integer(vmac))
pdb_data <- pdb_datas[i,]
# NP Norm Scores
np_datas <- np_datas[grep(vmac,np_datas$record_id),]
np_data <- np_datas[grep("--1",np_datas$record_id),]
edc_data <- edc_datas[which(edc_datas["vmac_id"]==as.integer(vmac)),]
print("Compiling Memory results")
pdb_data$race
gds
edc_data$gds
edc_data$gds_total
edc_data
edc_datas <- edc_datas[which(edc_datas["vmac_id"]==as.integer(vmac)),]
edc_data <- edc_datas[which(is.na(edc_datas$redcap_repeat_instrument)),]
edc_data
race <- pdb_data$race
race
as.character(race)
runApp('TAP_Uploader/Uploader')
runApp('TAP_Uploader/Uploader')
race
runApp('TAP_Uploader/Uploader')
label(race)
ra <- as.character(race)
label(ra)
label(ra) <- "race"
label(ra)
race <- as.character(pdb_data$race)
label(race)
runApp('TAP_Uploader/Uploader')
runApp('MAP2_Uploader/Uploader')
vmac <- 3975
epochh <- 1
library(ggplot2)
library(plotly)
library(redcapAPI)
library(WordR)
library(officer)
library(Hmisc)
library(tidyverse)
library(flextable)
#library(ggpattern)
#library(patternplot)
library(png)
library(readxl)
# Global Pathing
local <- 1
online <- 0
if (local) {
# Add Local Paths Here
out_path <- "C:/Users/sweelyb/Documents/output/"
main_path <- "C:/Users/sweelyb/Documents/Letter_Auto/"
} else if (online) {
# Add Global Paths Here
out_path <- "/app/"
main_path <- "/srv/shiny-server/"
}
ex_path <- paste0(main_path,"epoch5dde_lookup.xlsx")
FII <- redcapConnection(url = "https://redcap.vanderbilt.edu/api/",
token = "489C53D4DAAE99F87EF37A9D77563BB0",conn,project = 42471)
tm7yr <- redcapConnection(url = "https://redcap.vanderbilt.edu/api/",
token = "1769F48432D599795BAA88493EFFCF3F",conn,project = 117460)
tm60 <- redcapConnection(url = "https://redcap.vanderbilt.edu/api/",
token = "54A5137E46FFC775D9BC1117DA32B30A",conn,project = 80145)
tm36 <- redcapConnection(url = "https://redcap.vanderbilt.edu/api/",
token = "3CCD5E3C8A09BE5F6E940B291A9BC6B4",conn,project = 73222)
tm18 <- redcapConnection(url = "https://redcap.vanderbilt.edu/api/",
token = "04661B3930D4F892AB1F194C287EE98B",conn,project = 56822)
tme <- redcapConnection(url = "https://redcap.vanderbilt.edu/api/",
token = "1A5DACDD0A80C92D60FCCC27A501286E",conn,project = 39332)
pdb <- redcapConnection(url = "https://redcap.vanderbilt.edu/api/",
token = "496ED1BD518B29CB96B5CFD9C48844FE", conn, project = 136242)
pdb_datas <- exportReports(pdb, 267451)
# NP Norm Scores
dde <- redcapConnection(url = "https://redcap.vanderbilt.edu/api/",
token = "0676EDF59CA88377654227BB56028EEE", conn, project = 124389)
dde2 <- redcapConnection(url = "https://redcap.vanderbilt.edu/api/",
token = "F009A86ED43B42332AC26C21411F37BC", conn, project = 140071)
EDC <- redcapConnection(url = "https://redcap.vanderbilt.edu/api/",
token = "09B0A6B7F207F51C6F656BAE567FA390", conn, project = 119047)
dde_datas <- exportReports(dde, 275632)
dde2_datas <- exportReports(dde2, 277386)
edc_datas <- exportReports(EDC, 275637)
echo_datas <- exportReports(EDC,281651)
cond_datas <- exportReports(EDC,284613)
dep_datas <- exportReports(EDC,294830)
events <- c("eligibility_arm_1","enrollmentbaseline_arm_1","18month_followup_arm_1","3year_followup_arm_1","5year_followup_arm_1","7year_followup_arm_1","9year_followup_arm_1","11year_followup_arm_1")
map_data <- pdb_datas[which(pdb_datas$vmac_id==as.integer(vmac)),]
rev_data_frame <- apply(map_data, 2, rev)
map_data <- as.data.frame(rev_data_frame)
pdb_data <- map_data[which(map_data[,"redcap_event_name"]== events[epochh+1]),]
map_id <- pdb_data$map_id
if (nchar(map_id)==1) {inp <- paste0("00",map_id)} else if (nchar(map_id)==2) {inp <- paste0("0",map_id)} else {inp <- map_id}
fail <- 0
dde_data <- dde2_datas[grep(inp,dde2_datas$record_id),]
#if (length(dde_data$record_id)==0) {fail <- 1}
ij <- grep("--1",dde_data$record_id)
if(length(ij)==0) {ij <- 1}
edc_data <- edc_datas[which(edc_datas$map_id==as.integer(map_id)),]
if (length(edc_data$map_id)==0) {fail <- 1}
edc_data <- edc_data[which(edc_data[,"redcap_event_name"]== events[epochh+1]),]
dep_data <- dep_datas[which(dep_datas$map_id==as.integer(map_id)),]
if (length(dep_data$map_id)==0) {fail <- 1}
dep_data <- dep_data[which(dep_data[,"redcap_event_name"]== events[epochh]),]
echo_datas <- echo_datas[which(echo_datas$map_id==as.integer(map_id)),]
echo_datas_brain <- echo_datas[which(is.na(echo_datas$redcap_repeat_instrument)==FALSE),]
echo_datas <- echo_datas[which(is.na(echo_datas$redcap_repeat_instrument)),]
echo_data <- echo_datas[which(echo_datas[,"redcap_event_name"]== events[epochh+1]),]
#echo_data <- echo_data_s[which(is.na(echo_data_s$redcap_repeat_instrument)),]
brain_data <- echo_datas_brain[which(echo_datas_brain[,"redcap_event_name"]== events[epochh+1]),]
if (length(echo_data$map_id)==0) {fail <- 1}
cond_datas <- exportReports(EDC,284613)
cond_datas <- cond_datas[which(cond_datas[,"redcap_event_name"]== events[epochh+1]),]
cond_data <- cond_datas[which(cond_datas["map_id"]==as.integer(pdb_data$map_id)),]
cond_data <- cond_data[1,]
bc <- cond_data$blood_complete; if (is.na(bc)) {bc <- "No"}
ec <- cond_data$echo_complete; if (is.na(ec)) {ec <- "No"}
nc <- cond_data$np_complete; if (is.na(nc)) {nc <- "No"}
echo_data$vf_arrival_date_time
enroll_date <<- format(as.Date(echo_data$vf_arrival_date_time), "%m/%d/%Y")
format(as.Date(map_data[1, "visit1_date"]), "%m/%d/%Y")
format(as.Date(pdb_data$visit1_date), "%m/%d/%Y")
runApp('MAP2_Uploader/Uploader')
library(usethis)
install.packages("usethis")
library(usethis)
use_git_config(user.name = "bsweely", user.email = "bsweely@vols.utk.edu")
git_vaccinate()
gitcreds::gitcreds_set()
library(sys)
system("git")
gitcreds::gitcreds_set()
git
gitcreds::gitcreds_set()
system("powershell git")
gitcreds::gitcreds_set()
system("git")
system("git")
system("git")
system("git")
detach("package:sys", unload = TRUE)
library(sys)
system("git")
system("git")
system("git")
detach("package:sys", unload = TRUE)
library(sys)
library(sys)
gitcreds::gitcreds_set()
system("git")
git
system("git")
system("git")
gitcreds::gitcreds_set()
gitcreds::gitcreds_set()
library(gitcreds)
gitcreds::gitcreds_set()
create_github_token()
gitcreds::gitcreds_set()
library(usethis)
library(gitcreds)
library(sys)
gitcreds::gitcreds_set()
usethis::git_sitrep()
View(brain_data)
git
cd
gitcreds::gitcreds_set()
usethis::git_sitrep()
